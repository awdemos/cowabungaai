# End-to-end testing that deploys Supabase and the API, and deploy/tests llama-cpp-python, text-embeddings, and whisper

name: e2e-whisper
on:
  pull_request

concurrency:
  group: e2e-whisper-${{ github.ref }}
  cancel-in-progress: true

jobs:
  e2e_whisper:
    runs-on: ai-linux-x64-gpu

    permissions:
      contents: read
      packages: read
      id-token: write # This is needed for OIDC federation.

    steps:
        - name: Checkout Repo
          uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

        - name: Setup upterm session
          uses: lhotari/action-upterm@v1
          with:
            ## limits ssh access and adds the ssh public key for the user which triggered the workflow
            limit-access-to-actor: true

        - name: Setup Python
          uses: ./.github/actions/python
          with:
            additionalOptionalDep: dev-whisper

        - name: Setup UDS Environment
          uses: defenseunicorns/uds-common/.github/actions/setup@822dac4452e6815aadcf09f487406ff258756a0c # v0.14.0
          with:
            registry1Username: ${{ secrets.IRON_BANK_ROBOT_USERNAME }}
            registry1Password: ${{ secrets.IRON_BANK_ROBOT_PASSWORD }}
            ghToken: ${{ secrets.GITHUB_TOKEN }}
            udsCliVersion: 0.14.0
          continue-on-error: true # workaround for permissions issues

        - name: Setup UDS Workaround
          env:
            UDS_VERSION: v0.14.0
          run: |
            sudo wget -O uds https://github.com/defenseunicorns/uds-cli/releases/download/${{ env.UDS_VERSION }}/uds-cli_${{ env.UDS_VERSION }}_Linux_amd64 && \
            sudo chmod +x uds && \
            sudo chown $(whoami) uds && \
            sudo mv uds /usr/local/bin/

            sudo chown $(whoami) /usr/local/bin/k3d

            uds version
            k3d version

        - name: Create UDS Cluster
          shell: bash
          run: |
            UDS_CONFIG=.github/config/uds-config.yaml make create-uds-gpu-cluster

        - name: Test UDS GPU Cluster
          run: |
            uds zarf tools kubectl logs -n kube-system daemonset/nvidia-device-plugin-daemonset
            uds zarf tools kubectl apply -f packages/k3d-gpu/test/cuda-vector-add.yaml

        - name: Setup LFAI-API and Supabase
          uses: ./.github/actions/lfai-core

        ##########
        # whisper
        ##########
        - name: Deploy whisper
          run: |
            make build-whisper LOCAL_VERSION=e2e-test
            docker image prune -af
            uds zarf package deploy packages/whisper/zarf-package-whisper-amd64-e2e-test.tar.zst -l=trace --confirm
            rm packages/whisper/zarf-package-whisper-amd64-e2e-test.tar.zst

#        - name: Test whisper
#          run: |
#            python -m pytest ./tests/e2e/test_whisper.py -v

        - name: Test whisper
          run: |
            uds zarf tools kubectl describe nodes
