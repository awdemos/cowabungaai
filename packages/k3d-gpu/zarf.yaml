# yaml-language-server: $schema=https://raw.githubusercontent.com/defenseunicorns/zarf/main/zarf.schema.json

kind: ZarfPackageConfig
metadata:
  name: "k3d-gpu"
  version: '###ZARF_PKG_TMPL_VERSION###'
  description: >
    k3d base image with GPU support

components:
  - name: create-uds-cluster
    required: true
    actions:
      onCreate:
        before:
          - cmd: |
              uds pull ghcr.io/defenseunicorns/packages/uds/bundles/###ZARF_PKG_TMPL_UDS_FLAVOR###:###ZARF_PKG_TMPL_UDS_VERSION### -a ###ZARF_PKG_TMPL_ARCH###
            description: "Pull the UDS K3D slim dev bundle"

          - cmd: |
              docker pull ghcr.io/defenseunicorns/leapfrogai/k3d-gpu:###ZARF_PKG_TMPL_VERSION###
            description: "Pull the k3d-gpu image"
      onDeploy:
        before:
          - cmd: |
              uds deploy uds-bundle-###ZARF_PKG_TMPL_UDS_FLAVOR###-###ZARF_PKG_TMPL_ARCH###-###ZARF_PKG_TMPL_UDS_VERSION###.tar.zst \
                --set K3D_EXTRA_ARGS="--gpus=all \
                --image=ghcr.io/defenseunicorns/leapfrogai/k3d-gpu:###ZARF_PKG_TMPL_VERSION###" \
                --no-progress --confirm
            description: "Create a k3d cluster with GPU support"
      onRemove:
        before:
          - cmd: |
              k3d cluster delete uds
            description: "Delete the k3d cluster"

  - name: test-cluster
    required: true
    files:
      - source: test/cuda-vector-add.yaml
        target: test/cuda-vector-add.yaml
    actions:
      onDeploy:
        before:
          - cmd: |
              uds zarf tools kubectl apply -f ./test/cuda-vector-add.yaml
              uds zarf tools kubectl wait --for=jsonpath='{.status.phase}'=Succeeded --timeout=15s pod -l app=gpu-pod
              uds zarf tools kubectl logs -l app=gpu-pod
            description: "Run the test pod"
        after:
          - cmd: |
              uds zarf tools kubectl delete -f ./test/cuda-vector-add.yaml
            description: "Delete the test pod"
